#include <iostream>
#include <iomanip>

#include <cmath>

#include "gcp/program/Program.h"

#include "gcp/util/ChisqVariate.h"
#include "gcp/util/Exception.h"
#include "gcp/util/Sampler.h"

#include <vector>

using namespace std;
using namespace gcp::util;
using namespace gcp::program;


KeyTabEntry Program::keywords[] = {
  { "ntrial",     "1000", "i", "Number of trials"},
  { "nsamp",      "10", "i", "Number of samples per trial"},
  { "chisq",      "42", "d", "Chisquared value to test"},
  { "ndof",       "51", "i", "Number of dof"},
  { "x",          "0.0", "d", "x value"},
  { "mean",       "0.0", "d", "mean value"},
  { "sigma",      "1.0", "d", "sigma"},

  { END_OF_KEYWORDS}
};

void Program::initializeUsage() {};

int Program::main()
{
  double x      = Program::getDoubleParameter("x");
  double mean   = Program::getDoubleParameter("mean");
  double sigma  = Program::getDoubleParameter("sigma");
  double chisqVal  = Program::getDoubleParameter("chisq");
  unsigned ndof = Program::getDoubleParameter("ndof");

  COUT("Gauss CDF " << Sampler::gaussCdf(x, mean, sigma));
  COUT("Gauss PTE " << Sampler::gaussPte(x, mean, sigma));

  COUT("Chisq CDF " << Sampler::chisqCdf(chisqVal, ndof));
  COUT("Chisq PTE " << Sampler::chisqPte(chisqVal, ndof));

  ChisqVariate chisq;
  chisq.setChisq(14.0, 31);
  COUT(chisq.cdf());
  COUT(chisq.pte());

  COUT(Sampler::poissPdf(0, 3));
  COUT(Sampler::poissPdf(3, 3));
  COUT(Sampler::poissPdf(6, 3));
  COUT(Sampler::poissCdf(3, 3));
  COUT(Sampler::poissPte(3, 3));

  return 0;
}
